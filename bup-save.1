.TH bup-save 1 "2011\[en]06\[en]08" "Bup 0.25-rc1"
.SH NAME
.PP
bup-save - create a new bup backup set
.SH SYNOPSIS
.PP
bup save [-r \f[I]host\f[]:\f[I]path\f[]] <-t|-c|-n \f[I]name\f[]>
[-#] [-f \f[I]indexfile\f[]] [-v] [-q]
[\[em]smaller=\f[I]maxsize\f[]] <paths\&...>
.SH DESCRIPTION
.PP
\f[B]bup\ save\f[] saves the contents of the given files or paths
into a new backup set and optionally names that backup set.
.PP
Before trying to save files using \f[B]bup\ save\f[], you should
first update the index using \f[B]bup\ index\f[].
The reasons for separating the two steps are described in the man
page for \f[B]bup-index\f[](1).
.SH OPTIONS
.TP
.B -r, \[em]remote=\f[I]host\f[]:\f[I]path\f[]
save the backup set to the given remote server.
If \f[I]path\f[] is omitted, uses the default path on the remote
server (you still need to include the ':').
The connection to the remote server is made with SSH.
If you'd like to specify which port, user or private key to use for
the SSH connection, we recommend you use the \f[B]~/.ssh/config\f[]
file.
.RS
.RE
.TP
.B -t, \[em]tree
after creating the backup set, print out the git tree id of the
resulting backup.
.RS
.RE
.TP
.B -c, \[em]commit
after creating the backup set, print out the git commit id of the
resulting backup.
.RS
.RE
.TP
.B -n, \[em]name=\f[I]name\f[]
after creating the backup set, create a git branch named
\f[I]name\f[] so that the backup can be accessed using that name.
If \f[I]name\f[] already exists, the new backup will be considered
a descendant of the old \f[I]name\f[].
(Thus, you can continually create new backup sets with the same
name, and later view the history of that backup set to see how
files have changed over time.)
.RS
.RE
.TP
.B -f, \[em]indexfile=\f[I]indexfile\f[]
use a different index filename instead of \f[B]~/.bup/bupindex\f[].
.RS
.RE
.TP
.B -v, \[em]verbose
increase verbosity (can be used more than once).
With one -v, prints every directory name as it gets backed up.
With two -v, also prints every filename.
.RS
.RE
.TP
.B -q, \[em]quiet
disable progress messages.
.RS
.RE
.TP
.B \[em]smaller=\f[I]maxsize\f[]
don't back up files >= \f[I]maxsize\f[] bytes.
You can use this to run frequent incremental backups of your small
files, which can usually be backed up quickly, and skip over large
ones (like virtual machine images) which take longer.
Then you can back up the large files less frequently.
Use a suffix like k, M, or G to specify multiples of 1024,
1024\f[I]1024, 1024\f[]1024*1024 respectively.
.RS
.RE
.TP
.B \[em]bwlimit=\f[I]bytes/sec\f[]
don't transmit more than \f[I]bytes/sec\f[] bytes per second to the
server.
This is good for making your backups not suck up all your network
bandwidth.
Use a suffix like k, M, or G to specify multiples of 1024,
1024\f[I]1024, 1024\f[]1024*1024 respectively.
.RS
.RE
.TP
.B \[em]strip
strips the path that is given from all files and directories.
.RS
.PP
A directory \f[I]/root/chroot/etc\f[] saved with
\[lq]bup save -n chroot \[em]strip /root/chroot\[rq] would be saved
as \f[I]/etc\f[].
.RE
.TP
.B \[em]strip-prefix=\f[I]path-prefix\f[]
strips the given path-prefix \f[I]path-prefix\f[] from all files
and directories.
.RS
.PP
A directory \f[I]/root/chroots/webserver\f[] saved with
\[lq]bup save -n webserver \[em]strip-path=/root/chroots\[rq] would
be saved as \f[I]/webserver/etc\f[]
.RE
.TP
.B \[em]graft=\f[I]old_path\f[]=\f[I]new_path\f[]
a graft point \f[I]old_path\f[]=\f[I]new_path\f[] (can be used more
than once).
.RS
.PP
A directory \f[I]/root/chroot/a/etc\f[] saved with
\[lq]bup save -n chroots \[em]graft /root/chroot/a/etc=/chroots/a\[rq]
would be saved as \f[I]/chroots/a/etc\f[]
.RE
.TP
.B -\f[I]#\f[], \[em]compress=\f[I]#\f[]
set the compression level to # (a value from 0\[en]9, where 9 is
the highest and 0 is no compression).
The default is 1 (fast, loose compression)
.RS
.RE
.SH EXAMPLE
.PP
\f[CR]
      $\ bup\ index\ -ux\ /etc
      Indexing:\ 1981,\ done.
      
      $\ bup\ save\ -r\ myserver:\ -n\ my-pc-backup\ --bwlimit=50k\ /etc
      Reading\ index:\ 1981,\ done.
      Saving:\ 100.00%\ (998/998k,\ 1981/1981\ files),\ done.
      
      
      
      $\ ls\ /home/joe/chroots/httpd
      bin\ var
      
      $\ bup\ index\ -ux\ /home/joe/chroots/httpd
      Indexing:\ 1337,\ done.
      
      $\ bup\ save\ --strip\ -n\ joes-httpd-chroot\ /home/joe/chroots/httpd
      Reading\ index:\ 1337,\ done.
      Saving:\ 100.00%\ (998/998k,\ 1337/1337\ files),\ done.
      
      $\ bup\ ls\ joes-httpd-chroot/latest/
      bin/
      var/
      
      
      $\ bup\ save\ --strip-prefix=/home/joe/chroots\ -n\ joes-chroots\ \\
      \ \ \ \ \ /home/joe/chroots/httpd
      Reading\ index:\ 1337,\ done.
      Saving:\ 100.00%\ (998/998k,\ 1337/1337\ files),\ done.
      
      $\ bup\ ls\ joes-chroots/latest/
      httpd/
      
      
      $\ bup\ save\ --graft\ /home/joe/chroots/httpd=/http-chroot\ \\
      \ \ \ \ \ -n\ joe
      \ \ \ \ \ /home/joe/chroots/httpd
      Reading\ index:\ 1337,\ done.
      Saving:\ 100.00%\ (998/998k,\ 1337/1337\ files),\ done.
      
      $\ bup\ ls\ joe/latest/
      http-chroot/
\f[]
.SH SEE ALSO
.PP
\f[B]bup-index\f[](1), \f[B]bup-split\f[](1), \f[B]bup-on\f[](1),
\f[B]bup-restore\f[](1), \f[B]ssh_config\f[](5)
.SH BUP
.PP
Part of the \f[B]bup\f[](1) suite.
.SH AUTHORS
Avery Pennarun <apenwarr@gmail.com>.

