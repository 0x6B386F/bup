.TH bup\-drecurse 1 "2013\-09\-22" "Bup 0.25\-rc2\-36\-g81ad1e6"
.SH NAME
.PP
bup\-drecurse \- recursively list files in your filesystem
.SH SYNOPSIS
.PP
bup drecurse [\-x][\-q] [\-\-exclude
\f[I]path\f[]][\\\-\-exclude\-from *filename*] [\-\-profile] <path>
.SH DESCRIPTION
.PP
\f[C]bup\ drecurse\f[] traverses files in the filesystem in a way
similar to \f[C]find\f[](1).
In most cases, you should use \f[C]find\f[](1) instead.
.PP
This program is useful mainly for testing the file traversal algorithm
used in \f[C]bup\-index\f[](1).
.PP
Note that filenames are returned in reverse alphabetical order, as in
\f[C]bup\-index\f[](1).
This is important because you can\[aq]t generate the hash of a parent
directory until you have generated the hashes of all its children.
When listing files in reverse order, the parent directory will come
after its children, making this easy.
.SH OPTIONS
.TP
.B \-x, \-\-xdev, \-\-one\-file\-system
don\[aq]t cross filesystem boundaries.
.RS
.RE
.TP
.B \-q, \-\-quiet
don\[aq]t print filenames as they are encountered.
Useful when testing performance of the traversal algorithms.
.RS
.RE
.TP
.B \-\-exclude=\f[I]path\f[]
a path to exclude from the backup (can be used more than once)
.RS
.RE
.TP
.B \-\-exclude\-from=\f[I]filename\f[]
a file that contains exclude paths (can be used more than once)
.RS
.RE
.TP
.B \-\-profile
print profiling information upon completion.
Useful when testing performance of the traversal algorithms.
.RS
.RE
.SH EXAMPLE
.IP
.nf
\f[C]
bup\ drecurse\ \-x\ /
\f[]
.fi
.SH SEE ALSO
.PP
\f[C]bup\-index\f[](1)
.SH BUP
.PP
Part of the \f[C]bup\f[](1) suite.
.SH AUTHORS
Avery Pennarun <apenwarr@gmail.com>.
